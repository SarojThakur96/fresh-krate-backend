name: CI/CD to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the latest code from the repository in the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment for the GitHub Actions runner
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.17.0"

      # Install dependencies (optional, in case you have tests or other build steps)
      - name: Install dependencies
        run: npm install

      # Set up SSH agent to connect to EC2
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Deploy to EC2 instance via SSH
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Navigate to your project directory
            cd /home/ubuntu/shop-backend || exit

            # Pull the latest code from your remote GitHub repository
            # Check if the directory is already a Git repository  
              if [ ! -d ".git" ]; then
                # Initialize the directory as a Git repository and set the remote origin
                git init
                git remote add origin https://github.com/SarojThakur96/fresh-krate-backend.git
                git pull origin main
              else
                # If it is already a Git repository, just pull the latest changes
                git pull origin main
              fi
           
            # Verify installation
              node -v
              npm -v  

            # Install dependencies
            npm install

            # Build Docker image
            docker build -t shop-backend .

            # Stop and remove any existing containers
            docker stop shop-backend || true
            docker rm shop-backend || true

            # Run the new Docker container with environment variables passed from GitHub Secrets
            docker run -d -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
              -e RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }} \
              -e RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }} \
              --name shop-backend shop-backend

            exit
          EOF
