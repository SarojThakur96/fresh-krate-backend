name: CI/CD to EC2

on:
  push:
    branches:
      - main # Run this action on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the latest code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH agent to connect to EC2
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }} # SSH private key stored in GitHub Secrets

      # Deploy to EC2 instance via SSH
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/gym-aur-backend  # Change this to your project directory on EC2

            # Pull the latest code from GitHub
            git pull origin main

            # Build Docker image
            docker build -t gym-aur-backend .

            # Stop and remove any existing containers
            docker stop gym-aur-backend || true
            docker rm gym-aur-backend || true

            # Run the new Docker container
            docker run -d -p 3000:3000 --name gym-aur-backend gym-aur-backend

            exit
          EOF
